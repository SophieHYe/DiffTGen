/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 01:09:27 GMT 2017
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.distribution.AbstractIntegerDistributionTest;
import org.apache.commons.math3.distribution.BinomialDistribution;
import org.apache.commons.math3.distribution.GeometricDistribution;
import org.apache.commons.math3.distribution.PascalDistribution;
import org.apache.commons.math3.distribution.PoissonDistribution;
import org.apache.commons.math3.distribution.UniformIntegerDistribution;
import org.apache.commons.math3.distribution.ZipfDistribution;
import org.apache.commons.math3.random.RandomGenerator;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well44497a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.lang.reflect.Field;
import org.apache.commons.lang3.reflect.FieldUtils;
import static org.junit.Assert.*;
import myprinter.FieldPrinter;

public class DiffTGenTest2 {

  //Test case number: 0
  /*
   * 17 covered goals:
   * Goal 1. sample(I)[I_org.apache.commons.math3.exception.NumberIsTooSmallException_EXPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 204
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 205
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 206
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I
   * Goal 10. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 11. Weak Mutation 246: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp Negation of sampleSize
   * Goal 12. Weak Mutation 247: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC 1 sampleSize
   * Goal 13. Weak Mutation 248: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC -1 sampleSize
   * Goal 14. Weak Mutation 250: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - ReplaceComparisonOperator > -> !=
   * Goal 15. Weak Mutation 252: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:205 - InsertUnaryOp Negation of sampleSize
   * Goal 16. Weak Mutation 253: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:205 - InsertUnaryOp IINC 1 sampleSize
   * Goal 17. Weak Mutation 254: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:205 - InsertUnaryOp IINC -1 sampleSize
   */

  

  //Test case number: 1
  /*
   * 21 covered goals:
   * Goal 1. inverseCumulativeProbability(D)I_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 101
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 102
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I
   * Goal 9. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 10. Weak Mutation 33: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 11. Weak Mutation 34: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 12. Weak Mutation 35: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 13. Weak Mutation 37: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> !=
   * Goal 14. Weak Mutation 39: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 15. Weak Mutation 40: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 0.0
   * Goal 16. Weak Mutation 41: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> -1.0
   * Goal 17. Weak Mutation 42: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 2.0
   * Goal 18. Weak Mutation 43: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator <= -> -1
   * Goal 19. Weak Mutation 46: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:102 - InsertUnaryOp Negation of p
   * Goal 20. Weak Mutation 47: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:102 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 48: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:102 - ReplaceConstant - 1 -> 0
   */

  

  //Test case number: 2
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 82
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 86
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D
   * Goal 9. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 10. Weak Mutation 1: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceVariable x1 -> x0
   * Goal 11. Weak Mutation 2: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x1
   * Goal 12. Weak Mutation 3: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x1
   * Goal 13. Weak Mutation 4: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x1
   * Goal 14. Weak Mutation 5: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceVariable x0 -> x1
   * Goal 15. Weak Mutation 6: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x0
   * Goal 16. Weak Mutation 7: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x0
   * Goal 17. Weak Mutation 8: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x0
   * Goal 18. Weak Mutation 11: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 21: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceVariable x1 -> x0
   * Goal 20. Weak Mutation 22: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp Negation of x1
   * Goal 21. Weak Mutation 23: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC 1 x1
   * Goal 22. Weak Mutation 24: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC -1 x1
   * Goal 23. Weak Mutation 25: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceVariable x0 -> x1
   * Goal 24. Weak Mutation 26: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp Negation of x0
   * Goal 25. Weak Mutation 27: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC 1 x0
   * Goal 26. Weak Mutation 28: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC -1 x0
   * Goal 27. Weak Mutation 29: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceArithmeticOperator - -> +
   * Goal 28. Weak Mutation 30: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceArithmeticOperator - -> %
   * Goal 29. Weak Mutation 31: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceArithmeticOperator - -> *
   * Goal 30. Weak Mutation 32: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceArithmeticOperator - -> /
   */

  

  //Test case number: 3
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 82
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 86
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D
   * Goal 9. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 10. Weak Mutation 2: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x1
   * Goal 11. Weak Mutation 3: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x1
   * Goal 12. Weak Mutation 4: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x1
   * Goal 13. Weak Mutation 6: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x0
   * Goal 14. Weak Mutation 7: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x0
   * Goal 15. Weak Mutation 8: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x0
   * Goal 16. Weak Mutation 10: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 22: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp Negation of x1
   * Goal 18. Weak Mutation 23: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC 1 x1
   * Goal 19. Weak Mutation 24: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC -1 x1
   * Goal 20. Weak Mutation 26: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp Negation of x0
   * Goal 21. Weak Mutation 27: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC 1 x0
   * Goal 22. Weak Mutation 28: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC -1 x0
   * Goal 23. Weak Mutation 29: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceArithmeticOperator - -> +
   * Goal 24. Weak Mutation 31: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceArithmeticOperator - -> *
   * Goal 25. Weak Mutation 32: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceArithmeticOperator - -> /
   */

  

  //Test case number: 4
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 159
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 177
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I
   * Goal 9. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 10. Weak Mutation 126: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of lower
   * Goal 11. Weak Mutation 127: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 lower
   * Goal 12. Weak Mutation 128: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 lower
   * Goal 13. Weak Mutation 129: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceConstant - 1 -> 0
   * Goal 14. Weak Mutation 130: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> %
   * Goal 15. Weak Mutation 131: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> -
   * Goal 16. Weak Mutation 132: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> *
   * Goal 17. Weak Mutation 133: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> /
   * Goal 18. Weak Mutation 135: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of upper
   * Goal 19. Weak Mutation 136: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 upper
   * Goal 20. Weak Mutation 137: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 upper
   * Goal 21. Weak Mutation 140: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 241: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp Negation of upper
   * Goal 23. Weak Mutation 242: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC 1 upper
   * Goal 24. Weak Mutation 243: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC -1 upper
   */

  

  //Test case number: 5
  /*
   * 117 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 101
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 105
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 106
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 109
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 114
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 118
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 119
   * Goal 12. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 125
   * Goal 13. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 126
   * Goal 14. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 127
   * Goal 15. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 128
   * Goal 16. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 129
   * Goal 17. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 143
   * Goal 18. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I: Line 194
   * Goal 19. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 204
   * Goal 20. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 208
   * Goal 21. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 209
   * Goal 22. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 210
   * Goal 23. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 212
   * Goal 24. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 159
   * Goal 25. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 177
   * Goal 26. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I
   * Goal 27. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I
   * Goal 28. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 29. Weak Mutation 33: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 30. Weak Mutation 34: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 31. Weak Mutation 35: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 32. Weak Mutation 37: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> !=
   * Goal 33. Weak Mutation 39: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 34. Weak Mutation 40: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 0.0
   * Goal 35. Weak Mutation 41: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> -1.0
   * Goal 36. Weak Mutation 42: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 2.0
   * Goal 37. Weak Mutation 44: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator <= -> ==
   * Goal 38. Weak Mutation 49: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - InsertUnaryOp Negation of p
   * Goal 39. Weak Mutation 50: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> 1.0
   * Goal 40. Weak Mutation 51: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> -1.0
   * Goal 41. Weak Mutation 53: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceComparisonOperator != -> <
   * Goal 42. Weak Mutation 58: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp Negation of lower
   * Goal 43. Weak Mutation 59: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC 1 lower
   * Goal 44. Weak Mutation 60: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC -1 lower
   * Goal 45. Weak Mutation 61: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 0
   * Goal 46. Weak Mutation 62: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 1
   * Goal 47. Weak Mutation 63: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -1
   * Goal 48. Weak Mutation 64: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 2147483647
   * Goal 49. Weak Mutation 65: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -2147483647
   * Goal 50. Weak Mutation 67: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceComparisonOperator != -> <
   * Goal 51. Weak Mutation 79: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - InsertUnaryOp Negation of p
   * Goal 52. Weak Mutation 80: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 0.0
   * Goal 53. Weak Mutation 81: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> -1.0
   * Goal 54. Weak Mutation 82: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 2.0
   * Goal 55. Weak Mutation 85: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceComparisonOperator != -> >
   * Goal 56. Weak Mutation 90: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 57. Weak Mutation 92: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 58. Weak Mutation 93: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 59. Weak Mutation 94: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 60. Weak Mutation 96: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 61. Weak Mutation 97: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 62. Weak Mutation 98: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable sigma -> p
   * Goal 63. Weak Mutation 100: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of sigma
   * Goal 64. Weak Mutation 101: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 65. Weak Mutation 102: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 66. Weak Mutation 104: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 67. Weak Mutation 105: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 68. Weak Mutation 106: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 69. Weak Mutation 108: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 70. Weak Mutation 109: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> 1.0
   * Goal 71. Weak Mutation 110: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> -1.0
   * Goal 72. Weak Mutation 111: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator == -> -2
   * Goal 73. Weak Mutation 115: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 116: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp Negation of chebyshevApplies
   * Goal 75. Weak Mutation 117: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC 1 chebyshevApplies
   * Goal 76. Weak Mutation 118: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC -1 chebyshevApplies
   * Goal 77. Weak Mutation 119: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 125: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable lower -> upper
   * Goal 79. Weak Mutation 126: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of lower
   * Goal 80. Weak Mutation 127: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 lower
   * Goal 81. Weak Mutation 128: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 lower
   * Goal 82. Weak Mutation 129: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceConstant - 1 -> 0
   * Goal 83. Weak Mutation 131: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> -
   * Goal 84. Weak Mutation 132: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> *
   * Goal 85. Weak Mutation 133: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> /
   * Goal 86. Weak Mutation 134: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable upper -> lower
   * Goal 87. Weak Mutation 135: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of upper
   * Goal 88. Weak Mutation 136: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 upper
   * Goal 89. Weak Mutation 137: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 upper
   * Goal 90. Weak Mutation 139: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> >
   * Goal 91. Weak Mutation 240: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - ReplaceVariable upper -> lower
   * Goal 92. Weak Mutation 241: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp Negation of upper
   * Goal 93. Weak Mutation 242: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC 1 upper
   * Goal 94. Weak Mutation 243: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC -1 upper
   * Goal 95. Weak Mutation 246: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp Negation of sampleSize
   * Goal 96. Weak Mutation 247: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC 1 sampleSize
   * Goal 97. Weak Mutation 248: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC -1 sampleSize
   * Goal 98. Weak Mutation 249: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - ReplaceComparisonOperator > -> -2
   * Goal 99. Weak Mutation 255: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp Negation of sampleSize
   * Goal 100. Weak Mutation 256: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp IINC 1 sampleSize
   * Goal 101. Weak Mutation 257: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp IINC -1 sampleSize
   * Goal 102. Weak Mutation 258: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceConstant - 0 -> 1
   * Goal 103. Weak Mutation 259: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable i -> sampleSize
   * Goal 104. Weak Mutation 260: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp Negation of i
   * Goal 105. Weak Mutation 261: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC 1 i
   * Goal 106. Weak Mutation 262: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC -1 i
   * Goal 107. Weak Mutation 263: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable sampleSize -> i
   * Goal 108. Weak Mutation 264: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp Negation of sampleSize
   * Goal 109. Weak Mutation 265: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC 1 sampleSize
   * Goal 110. Weak Mutation 266: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC -1 sampleSize
   * Goal 111. Weak Mutation 267: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceComparisonOperator >= -> -1
   * Goal 112. Weak Mutation 268: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceComparisonOperator >= -> >
   * Goal 113. Weak Mutation 274: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable i -> sampleSize
   * Goal 114. Weak Mutation 270: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - ReplaceVariable i -> sampleSize
   * Goal 115. Weak Mutation 271: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp Negation of i
   * Goal 116. Weak Mutation 272: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp IINC 1 i
   * Goal 117. Weak Mutation 273: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp IINC -1 i
   */

  

  //Test case number: 6
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V: Line 182
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V: Line 183
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V: Line 184
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V
   * Goal 10. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 11. Weak Mutation 244: org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V:182 - InsertUnaryOp Negation of seed
   * Goal 12. Weak Mutation 245: org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V:183 - InsertUnaryOp Negation of seed
   */

  

  //Test case number: 7
  /*
   * 65 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 228
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 229
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 230
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 234
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 101
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 105
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 106
   * Goal 12. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 109
   * Goal 13. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 110
   * Goal 14. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 118
   * Goal 15. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 119
   * Goal 16. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 120
   * Goal 17. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I
   * Goal 18. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I
   * Goal 19. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 20. Weak Mutation 33: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 21. Weak Mutation 34: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 22. Weak Mutation 35: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 23. Weak Mutation 37: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> !=
   * Goal 24. Weak Mutation 39: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 25. Weak Mutation 40: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 0.0
   * Goal 26. Weak Mutation 41: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> -1.0
   * Goal 27. Weak Mutation 42: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 2.0
   * Goal 28. Weak Mutation 45: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator <= -> <
   * Goal 29. Weak Mutation 49: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - InsertUnaryOp Negation of p
   * Goal 30. Weak Mutation 50: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> 1.0
   * Goal 31. Weak Mutation 51: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> -1.0
   * Goal 32. Weak Mutation 53: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceComparisonOperator != -> <
   * Goal 33. Weak Mutation 58: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp Negation of lower
   * Goal 34. Weak Mutation 59: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC 1 lower
   * Goal 35. Weak Mutation 60: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC -1 lower
   * Goal 36. Weak Mutation 61: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 0
   * Goal 37. Weak Mutation 62: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 1
   * Goal 38. Weak Mutation 63: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -1
   * Goal 39. Weak Mutation 64: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 2147483647
   * Goal 40. Weak Mutation 65: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -2147483647
   * Goal 41. Weak Mutation 66: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceComparisonOperator != -> -1
   * Goal 42. Weak Mutation 69: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:110 - InsertUnaryOp Negation of lower
   * Goal 43. Weak Mutation 70: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:110 - InsertUnaryOp IINC 1 lower
   * Goal 44. Weak Mutation 71: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:110 - InsertUnaryOp IINC -1 lower
   * Goal 45. Weak Mutation 72: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:110 - InsertUnaryOp Negation of p
   * Goal 46. Weak Mutation 73: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:110 - ReplaceComparisonOperator < -> -2
   * Goal 47. Weak Mutation 79: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - InsertUnaryOp Negation of p
   * Goal 48. Weak Mutation 80: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 0.0
   * Goal 49. Weak Mutation 81: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> -1.0
   * Goal 50. Weak Mutation 82: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 2.0
   * Goal 51. Weak Mutation 83: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceComparisonOperator != -> -1
   * Goal 52. Weak Mutation 86: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:120 - ReplaceVariable upper -> lower
   * Goal 53. Weak Mutation 87: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:120 - InsertUnaryOp Negation of upper
   * Goal 54. Weak Mutation 88: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:120 - InsertUnaryOp IINC 1 upper
   * Goal 55. Weak Mutation 89: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:120 - InsertUnaryOp IINC -1 upper
   * Goal 56. Weak Mutation 275: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 0.0
   * Goal 57. Weak Mutation 276: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 1.0
   * Goal 58. Weak Mutation 277: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> -1.0
   * Goal 59. Weak Mutation 278: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> NaN
   * Goal 60. Weak Mutation 279: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp Negation of argument
   * Goal 61. Weak Mutation 280: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC 1 argument
   * Goal 62. Weak Mutation 281: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC -1 argument
   * Goal 63. Weak Mutation 282: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - InsertUnaryOp Negation of result
   * Goal 64. Weak Mutation 283: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 287: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:234 - InsertUnaryOp Negation of result
   */

  

  //Test case number: 8
  /*
   * 175 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 228
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 229
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 230
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 234
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 101
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 105
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 106
   * Goal 12. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 107
   * Goal 13. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 109
   * Goal 14. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 114
   * Goal 15. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 118
   * Goal 16. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 119
   * Goal 17. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 125
   * Goal 18. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 126
   * Goal 19. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 127
   * Goal 20. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 128
   * Goal 21. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 129
   * Goal 22. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 143
   * Goal 23. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I: Line 194
   * Goal 24. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 159
   * Goal 25. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 160
   * Goal 26. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 161
   * Goal 27. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 170
   * Goal 28. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 171
   * Goal 29. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 172
   * Goal 30. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 176
   * Goal 31. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 177
   * Goal 32. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I
   * Goal 33. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I
   * Goal 34. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I
   * Goal 35. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I
   * Goal 36. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 37. Weak Mutation 33: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 38. Weak Mutation 34: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 39. Weak Mutation 35: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 40. Weak Mutation 37: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> !=
   * Goal 41. Weak Mutation 38: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> <=
   * Goal 42. Weak Mutation 39: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 43. Weak Mutation 40: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 0.0
   * Goal 44. Weak Mutation 41: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> -1.0
   * Goal 45. Weak Mutation 42: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 2.0
   * Goal 46. Weak Mutation 44: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator <= -> ==
   * Goal 47. Weak Mutation 49: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - InsertUnaryOp Negation of p
   * Goal 48. Weak Mutation 50: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> 1.0
   * Goal 49. Weak Mutation 51: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> -1.0
   * Goal 50. Weak Mutation 52: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceComparisonOperator != -> -1
   * Goal 51. Weak Mutation 53: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceComparisonOperator != -> <
   * Goal 52. Weak Mutation 55: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:107 - InsertUnaryOp Negation of lower
   * Goal 53. Weak Mutation 56: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:107 - InsertUnaryOp IINC 1 lower
   * Goal 54. Weak Mutation 57: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:107 - InsertUnaryOp IINC -1 lower
   * Goal 55. Weak Mutation 58: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp Negation of lower
   * Goal 56. Weak Mutation 59: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC 1 lower
   * Goal 57. Weak Mutation 60: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC -1 lower
   * Goal 58. Weak Mutation 61: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 0
   * Goal 59. Weak Mutation 62: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 1
   * Goal 60. Weak Mutation 63: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -1
   * Goal 61. Weak Mutation 64: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 2147483647
   * Goal 62. Weak Mutation 65: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -2147483647
   * Goal 63. Weak Mutation 67: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceComparisonOperator != -> <
   * Goal 64. Weak Mutation 79: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - InsertUnaryOp Negation of p
   * Goal 65. Weak Mutation 80: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 0.0
   * Goal 66. Weak Mutation 81: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> -1.0
   * Goal 67. Weak Mutation 82: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 2.0
   * Goal 68. Weak Mutation 85: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceComparisonOperator != -> >
   * Goal 69. Weak Mutation 90: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 70. Weak Mutation 92: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 71. Weak Mutation 93: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 72. Weak Mutation 94: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 73. Weak Mutation 96: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 74. Weak Mutation 97: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 75. Weak Mutation 98: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable sigma -> p
   * Goal 76. Weak Mutation 100: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of sigma
   * Goal 77. Weak Mutation 101: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 78. Weak Mutation 102: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 79. Weak Mutation 104: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 80. Weak Mutation 105: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 81. Weak Mutation 106: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 82. Weak Mutation 108: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 83. Weak Mutation 109: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> 1.0
   * Goal 84. Weak Mutation 110: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> -1.0
   * Goal 85. Weak Mutation 111: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator == -> -2
   * Goal 86. Weak Mutation 115: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0 -> 1
   * Goal 87. Weak Mutation 116: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp Negation of chebyshevApplies
   * Goal 88. Weak Mutation 117: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC 1 chebyshevApplies
   * Goal 89. Weak Mutation 118: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC -1 chebyshevApplies
   * Goal 90. Weak Mutation 119: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - ReplaceComparisonOperator == -> !=
   * Goal 91. Weak Mutation 125: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable lower -> upper
   * Goal 92. Weak Mutation 126: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of lower
   * Goal 93. Weak Mutation 127: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 lower
   * Goal 94. Weak Mutation 128: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 lower
   * Goal 95. Weak Mutation 129: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceConstant - 1 -> 0
   * Goal 96. Weak Mutation 131: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> -
   * Goal 97. Weak Mutation 132: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> *
   * Goal 98. Weak Mutation 133: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> /
   * Goal 99. Weak Mutation 134: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable upper -> lower
   * Goal 100. Weak Mutation 135: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of upper
   * Goal 101. Weak Mutation 136: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 upper
   * Goal 102. Weak Mutation 137: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 upper
   * Goal 103. Weak Mutation 138: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> -1
   * Goal 104. Weak Mutation 139: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> >
   * Goal 105. Weak Mutation 141: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable lower -> upper
   * Goal 106. Weak Mutation 142: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of lower
   * Goal 107. Weak Mutation 143: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 lower
   * Goal 108. Weak Mutation 144: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 lower
   * Goal 109. Weak Mutation 145: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable upper -> lower
   * Goal 110. Weak Mutation 146: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of upper
   * Goal 111. Weak Mutation 147: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 upper
   * Goal 112. Weak Mutation 148: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 upper
   * Goal 113. Weak Mutation 149: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> %
   * Goal 114. Weak Mutation 150: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> -
   * Goal 115. Weak Mutation 151: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> *
   * Goal 116. Weak Mutation 152: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> /
   * Goal 117. Weak Mutation 153: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 0
   * Goal 118. Weak Mutation 154: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 1
   * Goal 119. Weak Mutation 155: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> -1
   * Goal 120. Weak Mutation 156: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 3
   * Goal 121. Weak Mutation 157: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> +
   * Goal 122. Weak Mutation 158: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> %
   * Goal 123. Weak Mutation 159: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> -
   * Goal 124. Weak Mutation 160: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> *
   * Goal 125. Weak Mutation 161: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 126. Weak Mutation 162: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 127. Weak Mutation 163: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 128. Weak Mutation 164: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 129. Weak Mutation 165: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 130. Weak Mutation 166: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> xm
   * Goal 131. Weak Mutation 167: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> upper
   * Goal 132. Weak Mutation 168: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of lower
   * Goal 133. Weak Mutation 169: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 lower
   * Goal 134. Weak Mutation 170: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 lower
   * Goal 135. Weak Mutation 171: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator < -> !=
   * Goal 136. Weak Mutation 174: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 137. Weak Mutation 175: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 138. Weak Mutation 176: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 139. Weak Mutation 177: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 140. Weak Mutation 178: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 141. Weak Mutation 179: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> xm
   * Goal 142. Weak Mutation 180: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> lower
   * Goal 143. Weak Mutation 181: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of upper
   * Goal 144. Weak Mutation 182: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 upper
   * Goal 145. Weak Mutation 183: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 upper
   * Goal 146. Weak Mutation 186: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator <= -> ==
   * Goal 147. Weak Mutation 218: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> lower
   * Goal 148. Weak Mutation 219: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> upper
   * Goal 149. Weak Mutation 220: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp Negation of xm
   * Goal 150. Weak Mutation 221: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC 1 xm
   * Goal 151. Weak Mutation 222: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC -1 xm
   * Goal 152. Weak Mutation 223: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable pm -> p
   * Goal 153. Weak Mutation 224: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of pm
   * Goal 154. Weak Mutation 225: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable p -> pm
   * Goal 155. Weak Mutation 226: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of p
   * Goal 156. Weak Mutation 228: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceComparisonOperator < -> !=
   * Goal 157. Weak Mutation 230: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - ReplaceVariable xm -> lower
   * Goal 158. Weak Mutation 231: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - ReplaceVariable xm -> upper
   * Goal 159. Weak Mutation 232: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - InsertUnaryOp Negation of xm
   * Goal 160. Weak Mutation 233: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - InsertUnaryOp IINC 1 xm
   * Goal 161. Weak Mutation 234: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - InsertUnaryOp IINC -1 xm
   * Goal 162. Weak Mutation 240: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - ReplaceVariable upper -> lower
   * Goal 163. Weak Mutation 241: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp Negation of upper
   * Goal 164. Weak Mutation 242: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC 1 upper
   * Goal 165. Weak Mutation 243: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC -1 upper
   * Goal 166. Weak Mutation 275: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 0.0
   * Goal 167. Weak Mutation 276: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 1.0
   * Goal 168. Weak Mutation 277: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> -1.0
   * Goal 169. Weak Mutation 278: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> NaN
   * Goal 170. Weak Mutation 279: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp Negation of argument
   * Goal 171. Weak Mutation 280: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC 1 argument
   * Goal 172. Weak Mutation 281: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC -1 argument
   * Goal 173. Weak Mutation 282: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - InsertUnaryOp Negation of result
   * Goal 174. Weak Mutation 283: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - ReplaceComparisonOperator == -> !=
   * Goal 175. Weak Mutation 287: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:234 - InsertUnaryOp Negation of result
   */

  

  //Test case number: 9
  /*
   * 99 covered goals:
   * Goal 1. solveInverseCumulativeProbability(DII)I_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 228
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 229
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 230
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 234
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 159
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 160
   * Goal 12. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 161
   * Goal 13. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 170
   * Goal 14. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 171
   * Goal 15. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 174
   * Goal 16. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 176
   * Goal 17. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I
   * Goal 18. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 19. Weak Mutation 125: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable lower -> upper
   * Goal 20. Weak Mutation 126: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of lower
   * Goal 21. Weak Mutation 127: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 lower
   * Goal 22. Weak Mutation 128: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 lower
   * Goal 23. Weak Mutation 129: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 130: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 131: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> -
   * Goal 26. Weak Mutation 132: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> *
   * Goal 27. Weak Mutation 133: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> /
   * Goal 28. Weak Mutation 134: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable upper -> lower
   * Goal 29. Weak Mutation 135: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of upper
   * Goal 30. Weak Mutation 136: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 upper
   * Goal 31. Weak Mutation 137: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 upper
   * Goal 32. Weak Mutation 138: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 141: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable lower -> upper
   * Goal 34. Weak Mutation 142: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of lower
   * Goal 35. Weak Mutation 143: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 lower
   * Goal 36. Weak Mutation 144: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 lower
   * Goal 37. Weak Mutation 145: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable upper -> lower
   * Goal 38. Weak Mutation 146: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of upper
   * Goal 39. Weak Mutation 147: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 upper
   * Goal 40. Weak Mutation 148: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 upper
   * Goal 41. Weak Mutation 149: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> %
   * Goal 42. Weak Mutation 150: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> -
   * Goal 43. Weak Mutation 151: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> *
   * Goal 44. Weak Mutation 152: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> /
   * Goal 45. Weak Mutation 153: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 0
   * Goal 46. Weak Mutation 154: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 1
   * Goal 47. Weak Mutation 155: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> -1
   * Goal 48. Weak Mutation 156: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 3
   * Goal 49. Weak Mutation 157: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> +
   * Goal 50. Weak Mutation 158: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> %
   * Goal 51. Weak Mutation 159: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> -
   * Goal 52. Weak Mutation 160: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> *
   * Goal 53. Weak Mutation 161: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 54. Weak Mutation 162: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 55. Weak Mutation 163: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 56. Weak Mutation 164: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 57. Weak Mutation 165: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 58. Weak Mutation 166: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> xm
   * Goal 59. Weak Mutation 167: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> upper
   * Goal 60. Weak Mutation 168: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of lower
   * Goal 61. Weak Mutation 169: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 lower
   * Goal 62. Weak Mutation 170: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 lower
   * Goal 63. Weak Mutation 171: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator < -> !=
   * Goal 64. Weak Mutation 174: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 65. Weak Mutation 175: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 66. Weak Mutation 176: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 67. Weak Mutation 177: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 68. Weak Mutation 178: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 69. Weak Mutation 179: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> xm
   * Goal 70. Weak Mutation 180: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> lower
   * Goal 71. Weak Mutation 181: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of upper
   * Goal 72. Weak Mutation 182: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 upper
   * Goal 73. Weak Mutation 183: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 upper
   * Goal 74. Weak Mutation 186: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator <= -> ==
   * Goal 75. Weak Mutation 218: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> lower
   * Goal 76. Weak Mutation 219: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> upper
   * Goal 77. Weak Mutation 220: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp Negation of xm
   * Goal 78. Weak Mutation 221: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC 1 xm
   * Goal 79. Weak Mutation 222: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC -1 xm
   * Goal 80. Weak Mutation 223: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable pm -> p
   * Goal 81. Weak Mutation 224: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of pm
   * Goal 82. Weak Mutation 225: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable p -> pm
   * Goal 83. Weak Mutation 226: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of p
   * Goal 84. Weak Mutation 227: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceComparisonOperator < -> -2
   * Goal 85. Weak Mutation 235: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - ReplaceVariable xm -> lower
   * Goal 86. Weak Mutation 236: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - ReplaceVariable xm -> upper
   * Goal 87. Weak Mutation 237: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp Negation of xm
   * Goal 88. Weak Mutation 238: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp IINC 1 xm
   * Goal 89. Weak Mutation 239: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp IINC -1 xm
   * Goal 90. Weak Mutation 275: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 0.0
   * Goal 91. Weak Mutation 276: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 1.0
   * Goal 92. Weak Mutation 277: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> -1.0
   * Goal 93. Weak Mutation 278: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> NaN
   * Goal 94. Weak Mutation 279: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp Negation of argument
   * Goal 95. Weak Mutation 280: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC 1 argument
   * Goal 96. Weak Mutation 281: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC -1 argument
   * Goal 97. Weak Mutation 282: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - InsertUnaryOp Negation of result
   * Goal 98. Weak Mutation 283: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - ReplaceComparisonOperator == -> !=
   * Goal 99. Weak Mutation 287: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:234 - InsertUnaryOp Negation of result
   */

  

  //Test case number: 10
  /*
   * 99 covered goals:
   * Goal 1. solveInverseCumulativeProbability(DII)I_org.apache.commons.math3.exception.MathIllegalStateException_EXPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 228
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 229
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 230
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 234
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 159
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 160
   * Goal 12. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 161
   * Goal 13. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 170
   * Goal 14. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 171
   * Goal 15. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 174
   * Goal 16. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 176
   * Goal 17. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I
   * Goal 18. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 19. Weak Mutation 125: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable lower -> upper
   * Goal 20. Weak Mutation 126: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of lower
   * Goal 21. Weak Mutation 127: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 lower
   * Goal 22. Weak Mutation 128: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 lower
   * Goal 23. Weak Mutation 129: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 130: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 131: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> -
   * Goal 26. Weak Mutation 132: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> *
   * Goal 27. Weak Mutation 133: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> /
   * Goal 28. Weak Mutation 134: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable upper -> lower
   * Goal 29. Weak Mutation 135: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of upper
   * Goal 30. Weak Mutation 136: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 upper
   * Goal 31. Weak Mutation 137: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 upper
   * Goal 32. Weak Mutation 138: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 141: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable lower -> upper
   * Goal 34. Weak Mutation 142: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of lower
   * Goal 35. Weak Mutation 143: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 lower
   * Goal 36. Weak Mutation 144: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 lower
   * Goal 37. Weak Mutation 145: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable upper -> lower
   * Goal 38. Weak Mutation 146: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of upper
   * Goal 39. Weak Mutation 147: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 upper
   * Goal 40. Weak Mutation 148: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 upper
   * Goal 41. Weak Mutation 149: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> %
   * Goal 42. Weak Mutation 150: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> -
   * Goal 43. Weak Mutation 151: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> *
   * Goal 44. Weak Mutation 152: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> /
   * Goal 45. Weak Mutation 153: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 0
   * Goal 46. Weak Mutation 154: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 1
   * Goal 47. Weak Mutation 155: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> -1
   * Goal 48. Weak Mutation 156: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 3
   * Goal 49. Weak Mutation 157: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> +
   * Goal 50. Weak Mutation 158: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> %
   * Goal 51. Weak Mutation 159: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> -
   * Goal 52. Weak Mutation 160: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> *
   * Goal 53. Weak Mutation 161: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 54. Weak Mutation 162: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 55. Weak Mutation 163: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 56. Weak Mutation 164: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 57. Weak Mutation 165: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 58. Weak Mutation 166: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> xm
   * Goal 59. Weak Mutation 167: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> upper
   * Goal 60. Weak Mutation 168: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of lower
   * Goal 61. Weak Mutation 169: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 lower
   * Goal 62. Weak Mutation 170: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 lower
   * Goal 63. Weak Mutation 171: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator < -> !=
   * Goal 64. Weak Mutation 174: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 65. Weak Mutation 175: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 66. Weak Mutation 176: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 67. Weak Mutation 177: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 68. Weak Mutation 178: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 69. Weak Mutation 179: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> xm
   * Goal 70. Weak Mutation 180: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> lower
   * Goal 71. Weak Mutation 181: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of upper
   * Goal 72. Weak Mutation 182: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 upper
   * Goal 73. Weak Mutation 183: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 upper
   * Goal 74. Weak Mutation 186: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator <= -> ==
   * Goal 75. Weak Mutation 218: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> lower
   * Goal 76. Weak Mutation 219: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> upper
   * Goal 77. Weak Mutation 220: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp Negation of xm
   * Goal 78. Weak Mutation 221: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC 1 xm
   * Goal 79. Weak Mutation 222: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC -1 xm
   * Goal 80. Weak Mutation 223: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable pm -> p
   * Goal 81. Weak Mutation 224: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of pm
   * Goal 82. Weak Mutation 225: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable p -> pm
   * Goal 83. Weak Mutation 226: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of p
   * Goal 84. Weak Mutation 227: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceComparisonOperator < -> -2
   * Goal 85. Weak Mutation 235: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - ReplaceVariable xm -> lower
   * Goal 86. Weak Mutation 236: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - ReplaceVariable xm -> upper
   * Goal 87. Weak Mutation 237: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp Negation of xm
   * Goal 88. Weak Mutation 238: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp IINC 1 xm
   * Goal 89. Weak Mutation 239: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp IINC -1 xm
   * Goal 90. Weak Mutation 275: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 0.0
   * Goal 91. Weak Mutation 276: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 1.0
   * Goal 92. Weak Mutation 277: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> -1.0
   * Goal 93. Weak Mutation 278: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> NaN
   * Goal 94. Weak Mutation 279: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp Negation of argument
   * Goal 95. Weak Mutation 280: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC 1 argument
   * Goal 96. Weak Mutation 281: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC -1 argument
   * Goal 97. Weak Mutation 282: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - InsertUnaryOp Negation of result
   * Goal 98. Weak Mutation 283: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - ReplaceComparisonOperator == -> !=
   * Goal 99. Weak Mutation 287: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:234 - InsertUnaryOp Negation of result
   */

  

  //Test case number: 11
  /*
   * 253 covered goals:
   * Goal 1. sample(I)[I_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 228
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 229
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 230
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 234
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 101
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 105
   * Goal 12. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 106
   * Goal 13. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 109
   * Goal 14. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 114
   * Goal 15. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 118
   * Goal 16. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 119
   * Goal 17. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 125
   * Goal 18. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 126
   * Goal 19. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 127
   * Goal 20. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 128
   * Goal 21. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 129
   * Goal 22. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 130
   * Goal 23. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 131
   * Goal 24. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 132
   * Goal 25. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 133
   * Goal 26. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 135
   * Goal 27. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 136
   * Goal 28. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 137
   * Goal 29. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 139
   * Goal 30. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 143
   * Goal 31. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I: Line 194
   * Goal 32. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 204
   * Goal 33. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 208
   * Goal 34. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 209
   * Goal 35. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 210
   * Goal 36. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 159
   * Goal 37. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 160
   * Goal 38. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 161
   * Goal 39. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 167
   * Goal 40. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 170
   * Goal 41. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 171
   * Goal 42. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 172
   * Goal 43. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 174
   * Goal 44. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 176
   * Goal 45. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 177
   * Goal 46. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I
   * Goal 47. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 48. Weak Mutation 33: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 49. Weak Mutation 34: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 50. Weak Mutation 35: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 51. Weak Mutation 37: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> !=
   * Goal 52. Weak Mutation 39: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 53. Weak Mutation 40: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 0.0
   * Goal 54. Weak Mutation 41: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> -1.0
   * Goal 55. Weak Mutation 42: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 2.0
   * Goal 56. Weak Mutation 44: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator <= -> ==
   * Goal 57. Weak Mutation 49: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - InsertUnaryOp Negation of p
   * Goal 58. Weak Mutation 50: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> 1.0
   * Goal 59. Weak Mutation 51: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> -1.0
   * Goal 60. Weak Mutation 53: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceComparisonOperator != -> <
   * Goal 61. Weak Mutation 58: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp Negation of lower
   * Goal 62. Weak Mutation 59: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC 1 lower
   * Goal 63. Weak Mutation 60: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC -1 lower
   * Goal 64. Weak Mutation 61: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 0
   * Goal 65. Weak Mutation 62: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 1
   * Goal 66. Weak Mutation 63: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -1
   * Goal 67. Weak Mutation 64: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 2147483647
   * Goal 68. Weak Mutation 65: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -2147483647
   * Goal 69. Weak Mutation 67: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceComparisonOperator != -> <
   * Goal 70. Weak Mutation 79: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - InsertUnaryOp Negation of p
   * Goal 71. Weak Mutation 80: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 0.0
   * Goal 72. Weak Mutation 81: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> -1.0
   * Goal 73. Weak Mutation 82: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 2.0
   * Goal 74. Weak Mutation 85: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceComparisonOperator != -> >
   * Goal 75. Weak Mutation 90: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 76. Weak Mutation 91: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> sigma
   * Goal 77. Weak Mutation 92: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 78. Weak Mutation 93: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 79. Weak Mutation 94: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 80. Weak Mutation 95: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> sigma
   * Goal 81. Weak Mutation 96: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 82. Weak Mutation 97: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 83. Weak Mutation 98: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable sigma -> p
   * Goal 84. Weak Mutation 99: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable sigma -> mu
   * Goal 85. Weak Mutation 100: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of sigma
   * Goal 86. Weak Mutation 101: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 87. Weak Mutation 102: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 88. Weak Mutation 103: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> mu
   * Goal 89. Weak Mutation 104: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 90. Weak Mutation 105: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 91. Weak Mutation 106: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 92. Weak Mutation 107: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> mu
   * Goal 93. Weak Mutation 108: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 94. Weak Mutation 109: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> 1.0
   * Goal 95. Weak Mutation 110: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> -1.0
   * Goal 96. Weak Mutation 112: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator == -> >=
   * Goal 97. Weak Mutation 114: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 1 -> 0
   * Goal 98. Weak Mutation 116: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp Negation of chebyshevApplies
   * Goal 99. Weak Mutation 117: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC 1 chebyshevApplies
   * Goal 100. Weak Mutation 118: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC -1 chebyshevApplies
   * Goal 101. Weak Mutation 119: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - ReplaceComparisonOperator == -> !=
   * Goal 102. Weak Mutation 120: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:130 - ReplaceConstant - 1.0 -> 0.0
   * Goal 103. Weak Mutation 121: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:130 - ReplaceConstant - 1.0 -> -1.0
   * Goal 104. Weak Mutation 122: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:130 - ReplaceConstant - 1.0 -> 2.0
   * Goal 105. Weak Mutation 123: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:130 - ReplaceVariable p -> sigma
   * Goal 106. Weak Mutation 124: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:130 - ReplaceVariable p -> mu
   * Goal 107. Weak Mutation 125: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable lower -> upper
   * Goal 108. Weak Mutation 126: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of lower
   * Goal 109. Weak Mutation 127: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 lower
   * Goal 110. Weak Mutation 128: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 lower
   * Goal 111. Weak Mutation 129: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceConstant - 1 -> 0
   * Goal 112. Weak Mutation 130: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> %
   * Goal 113. Weak Mutation 131: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> -
   * Goal 114. Weak Mutation 132: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> *
   * Goal 115. Weak Mutation 133: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> /
   * Goal 116. Weak Mutation 134: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable upper -> lower
   * Goal 117. Weak Mutation 135: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of upper
   * Goal 118. Weak Mutation 136: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 upper
   * Goal 119. Weak Mutation 137: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 upper
   * Goal 120. Weak Mutation 138: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> -1
   * Goal 121. Weak Mutation 139: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> >
   * Goal 122. Weak Mutation 141: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable lower -> upper
   * Goal 123. Weak Mutation 142: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of lower
   * Goal 124. Weak Mutation 143: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 lower
   * Goal 125. Weak Mutation 144: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 lower
   * Goal 126. Weak Mutation 145: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable upper -> lower
   * Goal 127. Weak Mutation 146: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of upper
   * Goal 128. Weak Mutation 147: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 upper
   * Goal 129. Weak Mutation 148: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 upper
   * Goal 130. Weak Mutation 149: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> %
   * Goal 131. Weak Mutation 150: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> -
   * Goal 132. Weak Mutation 151: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> *
   * Goal 133. Weak Mutation 152: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> /
   * Goal 134. Weak Mutation 153: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 0
   * Goal 135. Weak Mutation 154: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 1
   * Goal 136. Weak Mutation 155: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> -1
   * Goal 137. Weak Mutation 156: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 3
   * Goal 138. Weak Mutation 157: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> +
   * Goal 139. Weak Mutation 158: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> %
   * Goal 140. Weak Mutation 159: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> -
   * Goal 141. Weak Mutation 160: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> *
   * Goal 142. Weak Mutation 161: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 143. Weak Mutation 162: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 144. Weak Mutation 163: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 145. Weak Mutation 164: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 146. Weak Mutation 165: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 147. Weak Mutation 166: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> xm
   * Goal 148. Weak Mutation 167: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> upper
   * Goal 149. Weak Mutation 168: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of lower
   * Goal 150. Weak Mutation 169: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 lower
   * Goal 151. Weak Mutation 170: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 lower
   * Goal 152. Weak Mutation 171: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator < -> !=
   * Goal 153. Weak Mutation 172: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator < -> -2
   * Goal 154. Weak Mutation 174: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 155. Weak Mutation 175: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 156. Weak Mutation 176: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 157. Weak Mutation 177: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 158. Weak Mutation 178: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 159. Weak Mutation 179: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> xm
   * Goal 160. Weak Mutation 180: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> lower
   * Goal 161. Weak Mutation 181: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of upper
   * Goal 162. Weak Mutation 182: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 upper
   * Goal 163. Weak Mutation 183: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 upper
   * Goal 164. Weak Mutation 186: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator <= -> ==
   * Goal 165. Weak Mutation 187: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceVariable lower -> xm
   * Goal 166. Weak Mutation 188: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceVariable lower -> upper
   * Goal 167. Weak Mutation 189: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp Negation of lower
   * Goal 168. Weak Mutation 190: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp IINC 1 lower
   * Goal 169. Weak Mutation 191: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp IINC -1 lower
   * Goal 170. Weak Mutation 192: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceVariable upper -> xm
   * Goal 171. Weak Mutation 193: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceVariable upper -> lower
   * Goal 172. Weak Mutation 194: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp Negation of upper
   * Goal 173. Weak Mutation 195: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp IINC 1 upper
   * Goal 174. Weak Mutation 196: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp IINC -1 upper
   * Goal 175. Weak Mutation 197: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceVariable lower -> xm
   * Goal 176. Weak Mutation 198: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceVariable lower -> upper
   * Goal 177. Weak Mutation 199: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp Negation of lower
   * Goal 178. Weak Mutation 200: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp IINC 1 lower
   * Goal 179. Weak Mutation 201: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - InsertUnaryOp IINC -1 lower
   * Goal 180. Weak Mutation 202: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator - -> +
   * Goal 181. Weak Mutation 203: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator - -> %
   * Goal 182. Weak Mutation 204: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator - -> *
   * Goal 183. Weak Mutation 205: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator - -> /
   * Goal 184. Weak Mutation 206: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceConstant - 2 -> 0
   * Goal 185. Weak Mutation 207: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceConstant - 2 -> 1
   * Goal 186. Weak Mutation 208: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceConstant - 2 -> -1
   * Goal 187. Weak Mutation 209: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceConstant - 2 -> 3
   * Goal 188. Weak Mutation 210: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator / -> +
   * Goal 189. Weak Mutation 211: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator / -> %
   * Goal 190. Weak Mutation 212: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator / -> -
   * Goal 191. Weak Mutation 213: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator / -> *
   * Goal 192. Weak Mutation 214: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator + -> %
   * Goal 193. Weak Mutation 215: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator + -> -
   * Goal 194. Weak Mutation 216: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator + -> *
   * Goal 195. Weak Mutation 217: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:167 - ReplaceArithmeticOperator + -> /
   * Goal 196. Weak Mutation 218: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> lower
   * Goal 197. Weak Mutation 219: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> upper
   * Goal 198. Weak Mutation 220: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp Negation of xm
   * Goal 199. Weak Mutation 221: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC 1 xm
   * Goal 200. Weak Mutation 222: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC -1 xm
   * Goal 201. Weak Mutation 223: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable pm -> p
   * Goal 202. Weak Mutation 224: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of pm
   * Goal 203. Weak Mutation 225: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceVariable p -> pm
   * Goal 204. Weak Mutation 226: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - InsertUnaryOp Negation of p
   * Goal 205. Weak Mutation 227: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceComparisonOperator < -> -2
   * Goal 206. Weak Mutation 228: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceComparisonOperator < -> !=
   * Goal 207. Weak Mutation 229: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:171 - ReplaceComparisonOperator < -> <=
   * Goal 208. Weak Mutation 230: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - ReplaceVariable xm -> lower
   * Goal 209. Weak Mutation 231: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - ReplaceVariable xm -> upper
   * Goal 210. Weak Mutation 232: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - InsertUnaryOp Negation of xm
   * Goal 211. Weak Mutation 233: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - InsertUnaryOp IINC 1 xm
   * Goal 212. Weak Mutation 234: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:172 - InsertUnaryOp IINC -1 xm
   * Goal 213. Weak Mutation 235: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - ReplaceVariable xm -> lower
   * Goal 214. Weak Mutation 236: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - ReplaceVariable xm -> upper
   * Goal 215. Weak Mutation 237: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp Negation of xm
   * Goal 216. Weak Mutation 238: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp IINC 1 xm
   * Goal 217. Weak Mutation 239: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:174 - InsertUnaryOp IINC -1 xm
   * Goal 218. Weak Mutation 240: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - ReplaceVariable upper -> lower
   * Goal 219. Weak Mutation 241: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp Negation of upper
   * Goal 220. Weak Mutation 242: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC 1 upper
   * Goal 221. Weak Mutation 243: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:177 - InsertUnaryOp IINC -1 upper
   * Goal 222. Weak Mutation 246: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp Negation of sampleSize
   * Goal 223. Weak Mutation 247: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC 1 sampleSize
   * Goal 224. Weak Mutation 248: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC -1 sampleSize
   * Goal 225. Weak Mutation 249: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - ReplaceComparisonOperator > -> -2
   * Goal 226. Weak Mutation 255: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp Negation of sampleSize
   * Goal 227. Weak Mutation 256: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp IINC 1 sampleSize
   * Goal 228. Weak Mutation 257: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp IINC -1 sampleSize
   * Goal 229. Weak Mutation 258: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceConstant - 0 -> 1
   * Goal 230. Weak Mutation 259: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable i -> sampleSize
   * Goal 231. Weak Mutation 260: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp Negation of i
   * Goal 232. Weak Mutation 261: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC 1 i
   * Goal 233. Weak Mutation 262: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC -1 i
   * Goal 234. Weak Mutation 263: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable sampleSize -> i
   * Goal 235. Weak Mutation 264: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp Negation of sampleSize
   * Goal 236. Weak Mutation 265: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC 1 sampleSize
   * Goal 237. Weak Mutation 266: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC -1 sampleSize
   * Goal 238. Weak Mutation 267: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceComparisonOperator >= -> -1
   * Goal 239. Weak Mutation 274: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable i -> sampleSize
   * Goal 240. Weak Mutation 270: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - ReplaceVariable i -> sampleSize
   * Goal 241. Weak Mutation 271: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp Negation of i
   * Goal 242. Weak Mutation 272: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp IINC 1 i
   * Goal 243. Weak Mutation 273: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp IINC -1 i
   * Goal 244. Weak Mutation 275: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 0.0
   * Goal 245. Weak Mutation 276: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 1.0
   * Goal 246. Weak Mutation 277: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> -1.0
   * Goal 247. Weak Mutation 278: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> NaN
   * Goal 248. Weak Mutation 279: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp Negation of argument
   * Goal 249. Weak Mutation 280: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC 1 argument
   * Goal 250. Weak Mutation 281: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC -1 argument
   * Goal 251. Weak Mutation 282: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - InsertUnaryOp Negation of result
   * Goal 252. Weak Mutation 283: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:230 - ReplaceComparisonOperator == -> !=
   * Goal 253. Weak Mutation 287: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:234 - InsertUnaryOp Negation of result
   */

  @Test public void test11()  throws Throwable  {
      AbstractIntegerDistribution.clearORefMap();
	GeometricDistribution geometricDistribution0 = new GeometricDistribution(0.06307350627642716);
      // Undeclared exception!
      try { 
        geometricDistribution0.sample(2477);
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
	List obj_list_7au3e = (List) AbstractIntegerDistribution.oref_map
			.get("inverseCumulativeProbability(double)26");
	Object target_obj_7au3e = obj_list_7au3e.get(0);
	assertEquals(
			"(E)26,(C)org.apache.commons.math3.distribution.AbstractIntegerDistribution,(MSIG)inverseCumulativeProbability(double)26,(I)0",
			0l, ((Integer) target_obj_7au3e).longValue());
  }

  //Test case number: 12
  /*
   * 17 covered goals:
   * Goal 1. sample(I)[I_org.apache.commons.math3.exception.NumberIsTooSmallException_EXPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 204
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 205
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 206
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I
   * Goal 10. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 11. Weak Mutation 246: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp Negation of sampleSize
   * Goal 12. Weak Mutation 247: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC 1 sampleSize
   * Goal 13. Weak Mutation 248: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC -1 sampleSize
   * Goal 14. Weak Mutation 251: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - ReplaceComparisonOperator > -> >=
   * Goal 15. Weak Mutation 252: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:205 - InsertUnaryOp Negation of sampleSize
   * Goal 16. Weak Mutation 253: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:205 - InsertUnaryOp IINC 1 sampleSize
   * Goal 17. Weak Mutation 254: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:205 - InsertUnaryOp IINC -1 sampleSize
   */

  

  //Test case number: 13
  /*
   * 32 covered goals:
   * Goal 1. sample(I)[I_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I: Line 194
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 204
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 208
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 209
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I: Line 210
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I
   * Goal 12. Weak Mutation 246: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp Negation of sampleSize
   * Goal 13. Weak Mutation 247: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC 1 sampleSize
   * Goal 14. Weak Mutation 248: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - InsertUnaryOp IINC -1 sampleSize
   * Goal 15. Weak Mutation 249: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:204 - ReplaceComparisonOperator > -> -2
   * Goal 16. Weak Mutation 255: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp Negation of sampleSize
   * Goal 17. Weak Mutation 256: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp IINC 1 sampleSize
   * Goal 18. Weak Mutation 257: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:208 - InsertUnaryOp IINC -1 sampleSize
   * Goal 19. Weak Mutation 258: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 259: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable i -> sampleSize
   * Goal 21. Weak Mutation 260: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp Negation of i
   * Goal 22. Weak Mutation 261: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC 1 i
   * Goal 23. Weak Mutation 262: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC -1 i
   * Goal 24. Weak Mutation 263: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceVariable sampleSize -> i
   * Goal 25. Weak Mutation 264: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp Negation of sampleSize
   * Goal 26. Weak Mutation 265: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC 1 sampleSize
   * Goal 27. Weak Mutation 266: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - InsertUnaryOp IINC -1 sampleSize
   * Goal 28. Weak Mutation 267: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:209 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 270: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - ReplaceVariable i -> sampleSize
   * Goal 30. Weak Mutation 271: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp Negation of i
   * Goal 31. Weak Mutation 272: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp IINC 1 i
   * Goal 32. Weak Mutation 273: org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I:210 - InsertUnaryOp IINC -1 i
   */

  

  //Test case number: 14
  /*
   * 149 covered goals:
   * Goal 1. sample()I_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 228
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D: Line 229
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 101
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 105
   * Goal 10. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 106
   * Goal 11. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 109
   * Goal 12. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 114
   * Goal 13. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 118
   * Goal 14. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 119
   * Goal 15. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 125
   * Goal 16. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 126
   * Goal 17. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 127
   * Goal 18. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 128
   * Goal 19. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 129
   * Goal 20. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 143
   * Goal 21. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I: Line 194
   * Goal 22. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 159
   * Goal 23. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 160
   * Goal 24. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 161
   * Goal 25. org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I: Line 170
   * Goal 26. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I
   * Goal 27. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 28. Weak Mutation 33: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 29. Weak Mutation 34: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 30. Weak Mutation 35: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 31. Weak Mutation 37: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> !=
   * Goal 32. Weak Mutation 39: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 33. Weak Mutation 40: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 0.0
   * Goal 34. Weak Mutation 41: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> -1.0
   * Goal 35. Weak Mutation 42: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 1.0 -> 2.0
   * Goal 36. Weak Mutation 44: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator <= -> ==
   * Goal 37. Weak Mutation 49: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - InsertUnaryOp Negation of p
   * Goal 38. Weak Mutation 50: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> 1.0
   * Goal 39. Weak Mutation 51: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceConstant - 0.0 -> -1.0
   * Goal 40. Weak Mutation 53: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:106 - ReplaceComparisonOperator != -> <
   * Goal 41. Weak Mutation 58: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp Negation of lower
   * Goal 42. Weak Mutation 59: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC 1 lower
   * Goal 43. Weak Mutation 60: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - InsertUnaryOp IINC -1 lower
   * Goal 44. Weak Mutation 61: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 0
   * Goal 45. Weak Mutation 62: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 1
   * Goal 46. Weak Mutation 63: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -1
   * Goal 47. Weak Mutation 64: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> 2147483647
   * Goal 48. Weak Mutation 65: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceConstant - -2147483648 -> -2147483647
   * Goal 49. Weak Mutation 67: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:109 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 79: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - InsertUnaryOp Negation of p
   * Goal 51. Weak Mutation 80: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 0.0
   * Goal 52. Weak Mutation 81: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> -1.0
   * Goal 53. Weak Mutation 82: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceConstant - 1.0 -> 2.0
   * Goal 54. Weak Mutation 85: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:119 - ReplaceComparisonOperator != -> >
   * Goal 55. Weak Mutation 90: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 56. Weak Mutation 91: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> sigma
   * Goal 57. Weak Mutation 92: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 58. Weak Mutation 93: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 59. Weak Mutation 94: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> p
   * Goal 60. Weak Mutation 95: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable mu -> sigma
   * Goal 61. Weak Mutation 96: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of mu
   * Goal 62. Weak Mutation 97: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 98: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable sigma -> p
   * Goal 64. Weak Mutation 99: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - ReplaceVariable sigma -> mu
   * Goal 65. Weak Mutation 100: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:127 - InsertUnaryOp Negation of sigma
   * Goal 66. Weak Mutation 101: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 67. Weak Mutation 102: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 68. Weak Mutation 103: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> mu
   * Goal 69. Weak Mutation 104: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 70. Weak Mutation 105: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator != -> ==
   * Goal 71. Weak Mutation 106: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> p
   * Goal 72. Weak Mutation 107: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceVariable sigma -> mu
   * Goal 73. Weak Mutation 108: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - InsertUnaryOp Negation of sigma
   * Goal 74. Weak Mutation 109: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> 1.0
   * Goal 75. Weak Mutation 110: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0.0 -> -1.0
   * Goal 76. Weak Mutation 111: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceComparisonOperator == -> -2
   * Goal 77. Weak Mutation 115: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:128 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 116: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp Negation of chebyshevApplies
   * Goal 79. Weak Mutation 117: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC 1 chebyshevApplies
   * Goal 80. Weak Mutation 118: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - InsertUnaryOp IINC -1 chebyshevApplies
   * Goal 81. Weak Mutation 119: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:129 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 125: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable lower -> upper
   * Goal 83. Weak Mutation 126: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of lower
   * Goal 84. Weak Mutation 127: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 lower
   * Goal 85. Weak Mutation 128: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 lower
   * Goal 86. Weak Mutation 129: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceConstant - 1 -> 0
   * Goal 87. Weak Mutation 130: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> %
   * Goal 88. Weak Mutation 131: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> -
   * Goal 89. Weak Mutation 132: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> *
   * Goal 90. Weak Mutation 133: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceArithmeticOperator + -> /
   * Goal 91. Weak Mutation 134: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceVariable upper -> lower
   * Goal 92. Weak Mutation 135: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp Negation of upper
   * Goal 93. Weak Mutation 136: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC 1 upper
   * Goal 94. Weak Mutation 137: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - InsertUnaryOp IINC -1 upper
   * Goal 95. Weak Mutation 138: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:159 - ReplaceComparisonOperator >= -> -1
   * Goal 96. Weak Mutation 141: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable lower -> upper
   * Goal 97. Weak Mutation 142: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of lower
   * Goal 98. Weak Mutation 143: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 lower
   * Goal 99. Weak Mutation 144: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 lower
   * Goal 100. Weak Mutation 145: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceVariable upper -> lower
   * Goal 101. Weak Mutation 146: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp Negation of upper
   * Goal 102. Weak Mutation 147: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC 1 upper
   * Goal 103. Weak Mutation 148: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - InsertUnaryOp IINC -1 upper
   * Goal 104. Weak Mutation 149: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> %
   * Goal 105. Weak Mutation 150: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> -
   * Goal 106. Weak Mutation 151: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> *
   * Goal 107. Weak Mutation 152: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator + -> /
   * Goal 108. Weak Mutation 153: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 0
   * Goal 109. Weak Mutation 154: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 1
   * Goal 110. Weak Mutation 155: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> -1
   * Goal 111. Weak Mutation 156: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceConstant - 2 -> 3
   * Goal 112. Weak Mutation 157: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> +
   * Goal 113. Weak Mutation 158: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> %
   * Goal 114. Weak Mutation 159: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> -
   * Goal 115. Weak Mutation 160: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:160 - ReplaceArithmeticOperator / -> *
   * Goal 116. Weak Mutation 161: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 117. Weak Mutation 162: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 118. Weak Mutation 163: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 119. Weak Mutation 164: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 120. Weak Mutation 165: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 121. Weak Mutation 166: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> xm
   * Goal 122. Weak Mutation 167: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable lower -> upper
   * Goal 123. Weak Mutation 168: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of lower
   * Goal 124. Weak Mutation 169: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 lower
   * Goal 125. Weak Mutation 170: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 lower
   * Goal 126. Weak Mutation 171: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator < -> !=
   * Goal 127. Weak Mutation 174: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> lower
   * Goal 128. Weak Mutation 175: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable xm -> upper
   * Goal 129. Weak Mutation 176: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of xm
   * Goal 130. Weak Mutation 177: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 xm
   * Goal 131. Weak Mutation 178: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 xm
   * Goal 132. Weak Mutation 179: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> xm
   * Goal 133. Weak Mutation 180: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceVariable upper -> lower
   * Goal 134. Weak Mutation 181: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp Negation of upper
   * Goal 135. Weak Mutation 182: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC 1 upper
   * Goal 136. Weak Mutation 183: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - InsertUnaryOp IINC -1 upper
   * Goal 137. Weak Mutation 186: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:161 - ReplaceComparisonOperator <= -> ==
   * Goal 138. Weak Mutation 218: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> lower
   * Goal 139. Weak Mutation 219: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - ReplaceVariable xm -> upper
   * Goal 140. Weak Mutation 220: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp Negation of xm
   * Goal 141. Weak Mutation 221: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC 1 xm
   * Goal 142. Weak Mutation 222: org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I:170 - InsertUnaryOp IINC -1 xm
   * Goal 143. Weak Mutation 275: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 0.0
   * Goal 144. Weak Mutation 276: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> 1.0
   * Goal 145. Weak Mutation 277: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> -1.0
   * Goal 146. Weak Mutation 278: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:228 - ReplaceConstant - NaN -> NaN
   * Goal 147. Weak Mutation 279: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp Negation of argument
   * Goal 148. Weak Mutation 280: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC 1 argument
   * Goal 149. Weak Mutation 281: org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D:229 - InsertUnaryOp IINC -1 argument
   */

  

  //Test case number: 15
  /*
   * 7 covered goals:
   * Goal 1. sample()I_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I: Line 194
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I
   */

  

  //Test case number: 16
  /*
   * 8 covered goals:
   * Goal 1. reseedRandomGenerator(J)V_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V: Line 182
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V
   * Goal 8. Weak Mutation 244: org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V:182 - InsertUnaryOp Negation of seed
   */

  

  //Test case number: 17
  /*
   * 16 covered goals:
   * Goal 1. inverseCumulativeProbability(D)I_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 101
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I: Line 102
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I
   * Goal 9. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 10. Weak Mutation 33: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - InsertUnaryOp Negation of p
   * Goal 11. Weak Mutation 34: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 12. Weak Mutation 35: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 13. Weak Mutation 36: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:101 - ReplaceComparisonOperator < -> -2
   * Goal 14. Weak Mutation 46: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:102 - InsertUnaryOp Negation of p
   * Goal 15. Weak Mutation 47: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:102 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 48: org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I:102 - ReplaceConstant - 1 -> 0
   */

  

  //Test case number: 18
  /*
   * 22 covered goals:
   * Goal 1. cumulativeProbability(II)D_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 82
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 86
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D
   * Goal 9. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 10. Weak Mutation 1: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceVariable x1 -> x0
   * Goal 11. Weak Mutation 2: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x1
   * Goal 12. Weak Mutation 3: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x1
   * Goal 13. Weak Mutation 4: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x1
   * Goal 14. Weak Mutation 5: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceVariable x0 -> x1
   * Goal 15. Weak Mutation 6: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x0
   * Goal 16. Weak Mutation 7: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x0
   * Goal 17. Weak Mutation 8: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x0
   * Goal 18. Weak Mutation 11: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 21: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - ReplaceVariable x1 -> x0
   * Goal 20. Weak Mutation 22: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp Negation of x1
   * Goal 21. Weak Mutation 23: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC 1 x1
   * Goal 22. Weak Mutation 24: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:86 - InsertUnaryOp IINC -1 x1
   */

  

  //Test case number: 19
  /*
   * 28 covered goals:
   * Goal 1. cumulativeProbability(II)D_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 2. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V: Line 47
   * Goal 3. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 47
   * Goal 4. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 72
   * Goal 5. org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V: Line 73
   * Goal 6. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 82
   * Goal 7. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 83
   * Goal 8. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D: Line 84
   * Goal 9. org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D
   * Goal 10. Weak Mutation 0: org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V:72 - ReplaceVariable rng -> random
   * Goal 11. Weak Mutation 1: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceVariable x1 -> x0
   * Goal 12. Weak Mutation 2: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x1
   * Goal 13. Weak Mutation 3: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x1
   * Goal 14. Weak Mutation 4: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x1
   * Goal 15. Weak Mutation 5: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceVariable x0 -> x1
   * Goal 16. Weak Mutation 6: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp Negation of x0
   * Goal 17. Weak Mutation 7: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC 1 x0
   * Goal 18. Weak Mutation 8: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - InsertUnaryOp IINC -1 x0
   * Goal 19. Weak Mutation 9: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:82 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 12: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:83 - ReplaceVariable x0 -> x1
   * Goal 21. Weak Mutation 13: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:83 - InsertUnaryOp Negation of x0
   * Goal 22. Weak Mutation 14: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:83 - InsertUnaryOp IINC 1 x0
   * Goal 23. Weak Mutation 15: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:83 - InsertUnaryOp IINC -1 x0
   * Goal 24. Weak Mutation 16: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:84 - ReplaceVariable x1 -> x0
   * Goal 25. Weak Mutation 17: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:84 - InsertUnaryOp Negation of x1
   * Goal 26. Weak Mutation 18: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:84 - InsertUnaryOp IINC 1 x1
   * Goal 27. Weak Mutation 19: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:84 - InsertUnaryOp IINC -1 x1
   * Goal 28. Weak Mutation 20: org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D:84 - ReplaceConstant - 1 -> 0
   */
}
